
CentOS 6.6系统安装配置图解教程(http://www.osyunwei.com/archives/8398.html)

一、配置防火墙，开启80端口、3306端口

vi /etc/sysconfig/iptables #编辑防火墙配置文件
# Firewall configuration written by system-config-firewall
# Manual customization of this file is not recommended.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8081 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8082 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8083 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8084 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8085 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8090 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8091 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8092 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8093 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8094 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
:wq!  #保存退出
service iptables restart #最后重启防火墙使配置生效

二、关闭SELINUX

vi /etc/selinux/config
#SELINUX=enforcing  #注释掉
#SELINUXTYPE=targeted  #注释掉
SELINUX=disabled  #增加
:wq!  #保存退出
setenforce 0  #使配置立即生效

三 、系统约定

软件源代码包存放位置：/usr/local/src
源码包编译安装位置：/usr/local/软件名字

四、下载软件包

1、nginx
	http://nginx.org/download/nginx-1.8.0.tar.gz

2、mysql
	http://mirrors.sohu.com/mysql/MySQL-5.6/mysql-5.6.26.tar.gz
	
3、php
	http://cn2.php.net/distributions/php-5.5.29.tar.gz
	
4、pcre
	ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz
	
5、openssl
	ftp://ftp.openssl.org/source/openssl-1.0.1p.tar.gz
	
6、zlib
	http://zlib.net/zlib-1.2.8.tar.gz
	
7、cmake
	http://www.cmake.org/files/v3.3/cmake-3.3.1.tar.gz
	
8、t1lib
	ftp://sunsite.unc.edu/pub/Linux/libs/graphics/t1lib-5.1.2.tar.gz
	
9、tiff
	http://download.osgeo.org/libtiff/tiff-4.0.5.tar.gz
	
10、libpng
	http://nchc.dl.sourceforge.net/project/libpng/libpng16/1.6.18/libpng-1.6.18.tar.gz
	
11、jpegsrc
	http://www.ijg.org/files/jpegsrc.v9a.tar.gz
	
12、libmcrypt
	http://nchc.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz
	
13、yasm
	http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
	
14、libvpx
	http://storage.googleapis.com/downloads.webmproject.org/releases/webm/libvpx-1.4.0.tar.bz2
	
15、freetype
	http://ftp.yzu.edu.tw/nongnu//freetype/freetype-2.6.tar.gz
	
16、libgd
	https://bitbucket.org/libgd/gd-libgd/downloads/libgd-2.1.1.tar.gz


或者安装rz sz命令上传
	yum -y install lrzsz
或者使用WinSCP工具上传到/usr/local/src

五、安装编译工具及库文件（使用yum命令安装）

	yum install -y compat*
	
	yum install -y lrzsz apr* 
	
	yum install -y autoconf automake bison bzip2 bzip2* fontconfig cloog-ppl cpp curl curl-devel fontconfig-devel
	
	yum install -y freetype freetype* freetype-devel gcc gcc-c++ gtk+-devel gd gettext gettext-devel glibc kernel kernel-headers
	
	yum install -y keyutils keyutils-libs-devel krb5-devel libcom_err-devel libpng libpng* libpng-devel libjpeg* 
	
	yum install -y libsepol-devel libselinux-devel libstdc++-devel libtool* libgomp libxml2 libxml2-devel libXpm* 
	
	yum install -y libX* libtiff libtiff* make mpfr ncurses* ntp openssl nasm nasm* openssl-devel patch pcre-devel perl php-common 
	
	yum install -y php-gd policycoreutils ppl telnet t1lib t1lib* wget zlib-devel

安装篇

以下是用SecureCRT或者putty等工具远程登录到服务器，在命令行下面操作的

一、安装MySQL

1、安装cmake

	./configure --prefix=/usr/local/cmake
	
2、安装MySQL

	groupadd mysql  #添加mysql组
	useradd -g mysql mysql -s /bin/false  #创建用户mysql并加入到mysql组，不允许mysql用户直接登录系统
	mkdir -p /data/mysql  #创建MySQL数据库存放目录
	chown -R mysql:mysql /data/mysql  #设置MySQL数据库存放目录权限
	mkdir -p /usr/local/mysql  #创建MySQL安装目录
	
	cd /usr/local/src #进入软件包存放目录
	tar zxvf mysql-5.6.26.tar.gz #解压
	cd mysql-5.6.26 #进入目录
	cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/data/mysql -DSYSCONFDIR=/etc #配置
	make #编译
	make install #安装
	
	rm -rf /etc/my.cnf #删除系统默认的配置文件（如果默认没有就不用删除）
	cd /usr/local/mysql #进入MySQL安装目录
	./scripts/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql #生成mysql系统数据库
	ln -s /usr/local/mysql/my.cnf /etc/my.cnf #添加到/etc目录的软连接
	cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld #把Mysql加入系统启动
	chmod 755 /etc/init.d/mysqld #增加执行权限
	chkconfig mysqld on #加入开机启动
	
	vi /etc/rc.d/init.d/mysqld #编辑
	basedir=/usr/local/mysql #MySQL程序安装路径
	datadir=/data/mysql #MySQl数据库存放目录
	
	service mysqld start #启动
	
	vi /etc/profile #把mysql服务加入系统环境变量：在最后添加下面这一行
	export PATH=$PATH:/usr/local/mysql/bin
	
	source /etc/profile #使配置立刻生效
	
	下面这两行把myslq的库文件链接到系统默认的位置，这样你在编译类似PHP等软件时可以不用指定mysql的库文件地址。
	ln -s /usr/local/mysql/lib/mysql /usr/lib/mysql
	ln -s /usr/local/mysql/include/mysql /usr/include/mysql
	mkdir /var/lib/mysql #创建目录
	ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock #添加软链接
	mysql_secure_installation #第一次直接回车，应为没有密码，设置Mysql密码，根据提示按Y 回车输入2次密码

二、安装Nginx

1、安装pcre

	./configure --prefix=/usr/local/pcre
	
2、安装openssl

	./config --prefix=/usr/local/openssl

	vi /etc/profile
	export PATH=$PATH:/usr/local/openssl/bin
	
	source /etc/profile
	
3、安装zlib

	./configure --prefix=/usr/local/zlib
	
4、安装Nginx

	groupadd www
	useradd -g www www -s /bin/false
	
	./configure --prefix=/usr/local/nginx --without-http_memcached_module --user=www --group=www --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-openssl=/usr/local/src/openssl-1.0.1p --with-zlib=/usr/local/src/zlib-1.2.8 --with-pcre=/usr/local/src/pcre-8.36
	  
	注：--with-openssl=/usr/local/src/openssl-1.0.1p --with-zlib=/usr/local/src/zlib-1.2.8 --with-pcre=/usr/local/src/pcre-8.36指向的是源码包解压的路径，而不是安装的路径，否则会报错
	
	/usr/local/nginx/sbin/nginx #启动Nginx
	
	设置nginx开机启动
	vi /etc/rc.d/init.d/nginx #编辑启动文件添加下面内容
	
############################################################
#!/bin/sh
#
# nginx - this script starts and stops the nginx daemon
#
# chkconfig: - 85 15
# description: Nginx is an HTTP(S) server, HTTP(S) reverse \
# proxy and IMAP/POP3 proxy server
# processname: nginx
# config: /etc/nginx/nginx.conf
# config: /usr/local/nginx/conf/nginx.conf
# pidfile: /usr/local/nginx/logs/nginx.pid
# Source function library.
. /etc/rc.d/init.d/functions
# Source networking configuration.
. /etc/sysconfig/network
# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0
nginx="/usr/local/nginx/sbin/nginx"
prog=$(basename $nginx)
NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"
[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx
lockfile=/var/lock/subsys/nginx
make_dirs() {
# make required directories
user=`$nginx -V 2>&1 | grep "configure arguments:" | sed 's/[^*]*--user=\([^ ]*\).*/\1/g' -`
if [ -z "`grep $user /etc/passwd`" ]; then
useradd -M -s /bin/nologin $user
fi
options=`$nginx -V 2>&1 | grep 'configure arguments:'`
for opt in $options; do
if [ `echo $opt | grep '.*-temp-path'` ]; then
value=`echo $opt | cut -d "=" -f 2`
if [ ! -d "$value" ]; then
# echo "creating" $value
mkdir -p $value && chown -R $user $value
fi
fi
done
}
start() {
[ -x $nginx ] || exit 5
[ -f $NGINX_CONF_FILE ] || exit 6
make_dirs
echo -n $"Starting $prog: "
daemon $nginx -c $NGINX_CONF_FILE
retval=$?
echo
[ $retval -eq 0 ] && touch $lockfile
return $retval
}
stop() {
echo -n $"Stopping $prog: "
killproc $prog -QUIT
retval=$?
echo
[ $retval -eq 0 ] && rm -f $lockfile
return $retval
}
restart() {
#configtest || return $?
stop
sleep 1
start
}
reload() {
#configtest || return $?
echo -n $"Reloading $prog: "
killproc $nginx -HUP
RETVAL=$?
echo
}
force_reload() {
restart
}
configtest() {
$nginx -t -c $NGINX_CONF_FILE
}
rh_status() {
status $prog
}
rh_status_q() {
rh_status >/dev/null 2>&1
}
case "$1" in
start)
rh_status_q && exit 0
$1
;;
stop)
rh_status_q || exit 0
$1
;;
restart|configtest)
$1
;;
reload)
rh_status_q || exit 7
$1
;;
force-reload)
force_reload
;;
status)
rh_status
;;
condrestart|try-restart)
rh_status_q || exit 0
;;
*)
echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"
exit 2
esac
############################################################

	chmod 775 /etc/rc.d/init.d/nginx  #赋予文件执行权限
	chkconfig nginx on #设置开机启动
	/etc/rc.d/init.d/nginx restart #重启
	
	到此，可以测试nginx是否安装成功

三、安装php

1、安装yasm

	./configure
	
2、安装libmcrypt
	
	./configure
	
3、安装libvpx

	./configure --prefix=/usr/local/libvpx --enable-shared --enable-vp9
	
4、安装tiff
	
	./configure --prefix=/usr/local/tiff --enable-shared
	
5、安装libpng
	需要yum install -y zlib-devel
	./configure --prefix=/usr/local/libpng --enable-shared

6、安装freetype
	
	./configure --prefix=/usr/local/freetype --enable-shared
	
7、安装jpeg
	
	./configure --prefix=/usr/local/jpeg --enable-shared
	
8、安装libgd

	./configure --prefix=/usr/local/libgd --enable-shared --with-jpeg=/usr/local/jpeg --with-png=/usr/local/libpng --with-freetype=/usr/local/freetype --with-fontconfig=/usr/local/freetype --with-xpm=/usr/ --with-tiff=/usr/local/tiff --with-vpx=/usr/local/libvpx

	./configure --prefix=/usr/local/libgd --enable-shared --with-jpeg=/usr/local/jpeg --with-png=/usr/local/libpng --with-freetype=/usr/local/freetype --with-zlib=/usr/local/zlib --with-fontconfig=/usr/local/freetype
	
9、安装t1lib

	./configure --prefix=/usr/local/t1lib --enable-shared

10、安装php

	注意：如果系统是64位，请执行以下两条命令，否则安装php会出错（32位系统不需要执行）
	\cp -frp /usr/lib64/libltdl.so*? /usr/lib/
	\cp -frp /usr/lib64/libXpm.so* /usr/lib/

	tar -zvxf php-5.5.29.tar.gz
	cd php-5.5.29
	export LD_LIBRARY_PATH=/usr/local/libgd/lib
	./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config --with-mysql-sock=/tmp/mysql.sock --with-pdo-mysql=/usr/local/mysql --with-gd --with-png-dir=/usr/local/libpng --with-jpeg-dir=/usr/local/jpeg --with-freetype-dir=/usr/local/freetype --with-xpm-dir=/usr/ --with-vpx-dir=/usr/local/libvpx/ --with-zlib-dir=/usr/local/zlib --with-t1lib=/usr/local/t1lib --with-iconv --enable-libxml --enable-xml --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --enable-opcache --enable-mbregex --enable-fpm --enable-mbstring --enable-ftp --enable-gd-native-ttf --with-openssl --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --enable-session --with-mcrypt --with-curl --enable-ctype
	make
	make install
	
	cp php.ini-development /usr/local/php/etc/php.ini #复制php配置文件到安装目录
	rm -rf /etc/php.ini #删除系统自带配置文件
	ln -s /usr/local/php/etc/php.ini /etc/php.ini #添加软链接到 /etc目录
	cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf #拷贝模板文件为php-fpm配置文件
	ln -s /usr/local/php/etc/php-fpm.conf /etc/php-fpm.conf #添加软连接到 /etc目录

	# cp php.ini-development /usr/local/php/etc/php.ini
	# cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf
	# cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf
	# cp -R ./sapi/fpm/php-fpm /etc/init.d/php-fpm   此句不可以用，用了无法设置开机启动
	
	vi /usr/local/php/etc/php-fpm.d/www.conf
	(修改
		user = www
		group = www
	)
	
	user = www #设置php-fpm运行账号为www  php7配置在/usr/local/php/etc/php-fpm.d/www.conf
	group = www #设置php-fpm运行组为www
	
	vi /usr/local/php/etc/php-fpm.conf #编辑保存退出
	
	pid = run/php-fpm.pid #取消前面的分号
	
	设置 php-fpm开机启动
	cp ./sapi/fpm/init.d.php-fpm /etc/rc.d/init.d/php-fpm #拷贝php-fpm到启动目录
	chmod +x /etc/rc.d/init.d/php-fpm #添加执行权限
	chkconfig php-fpm on #设置开机启动
	
	vi /usr/local/php/etc/php.ini #编辑配置文件保存退出
	找到：disable_functions =
	修改为：disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname
	#列出PHP可以禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。
	找到：;date.timezone =
	修改为：date.timezone = PRC #设置时区
	找到：expose_php = On
	修改为：expose_php = Off #禁止显示php版本的信息
	找到：short_open_tag = Off
	修改为：short_open_tag = ON #支持php短标签
	找到opcache.enable=0
	修改为opcache.enable=1 #php支持opcode缓存
	找到：;opcache.enable_cli=1 #php支持opcode缓存
	修改为：opcache.enable_cli=0
	在最后一行添加：zend_extension=opcache.so #开启opcode缓存功能
	
11、配置Nginx支持PHP

	vi /usr/local/nginx/conf/nginx.conf  #配置修改
	user www www; #首行user去掉注释,修改Nginx运行组为www www；必须与/usr/local/php/etc/php-fpm.conf中的user,group配置相同，否则php运行出错
	index index.html index.htm index.php; #添加index.php
	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
	root html;
	fastcgi_pass 127.0.0.1:9000;
	fastcgi_index index.php;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	include fastcgi_params;
	}
	#取消FastCGI server部分location的注释,注意fastcgi_param行的参数,改为$document_root$fastcgi_script_name,或者使用绝对路径
	/etc/init.d/nginx restart #重启nginx
	service php-fpm start #启动php-fpm
	
	查看php的所有支持模块
	php -m
	
	
四、测试篇

	cd /usr/local/nginx/html/ #进入nginx默认网站根目录
	rm -rf /usr/local/nginx/html/* #删除默认测试页
	vi index.php #新建index.php文件
	<?php
	phpinfo();
	?>
	:wq!?#保存退出
	chown www.www /usr/local/nginx/html/ -R #设置目录所有者
	chmod 700 /usr/local/nginx/html/ -R #设置目录权限
	在浏览器中打开服务器IP地址，会看到下面的界面

启动php失败：killall php-fpm

redis安装

1、安装
	mkdir /usr/local/redis 
	cd /usr/local/src
	tar zxvf redis-3.0.4.tar.gz
	cd redis-3.0.4
	make
	make PREFIX=/usr/local/redis install

2、配置redis
	复制并修改配置文档
	cp ./redis.conf /usr/local/redis/
	vi /usr/local/redis/redis.conf
	我只修改了如下两项：
	daemonize yes #redis将以守护进程的方式运行，默认为no会暂用你的终端
	timeout 300​ #当 客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能

	设置自动启动
	vi /etc/init.d/redis

############################################################################################
#!/bin/sh
#
# redis        Startup script for Redis Server
#
# chkconfig: - 80 12
# description: Redis is an open source, advanced key-value store.
#
# processname: redis-server
# config: /etc/redis.conf
# pidfile: /var/run/redis.pid
source /etc/init.d/functions
BIN="/usr/local/redis/bin"
CONFIG="/usr/local/redis/redis.conf"
PIDFILE="/var/run/redis.pid"
### Read configuration
[ -r "$SYSCONFIG" ] && source "$SYSCONFIG"
RETVAL=0
prog="redis-server"
desc="Redis Server"
start() {
        if [ -e $PIDFILE ];then
             echo "$desc already running...."
             exit 1
        fi
        echo -n $"Starting $desc: "
        daemon $BIN/$prog $CONFIG
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog
        return $RETVAL
}
stop() {
        echo -n $"Stop $desc: "
        killproc $prog
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog $PIDFILE
        return $RETVAL
}
restart() {
        stop
        start
}
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  condrestart)
        [ -e /var/lock/subsys/$prog ] && restart
        RETVAL=$?
        ;;
  status)
        status $prog
        RETVAL=$?
        ;;
   *)
        echo $"Usage: $0 {start|stop|restart|condrestart|status}"
        RETVAL=1
esac
exit $RETVAL
############################################################################################

	chmod 755 /etc/init.d/redis #设置权限

3、启动或关闭服务

	service redis start
	service redis stop
	
4、测试

	cd /usr/local/redis/bin
	./redis-cli
	127.0.0.1:6379> set name liang
	OK
	127.0.0.1:6379> get name
	"liang"
	127.0.0.1:6379>


php安装Redis扩展

注意：目录的权限 chomd 777 -R

1、安装redis

	下载phpredis
	tar zxvf phpredis-x.x.x.tar.gz
	cd phpredis-x.x.x
	/usr/local/php/bin/phpize    #用phpize生成configure配置文件
	./configure --with-php-config=/usr/local/php/bin/php-config   #配置
	make
	make install
	
	安装完成之后，出现下面的安装路径
	Installing shared extensions:     /usr/local/php/lib/php/extensions/no-debug-non-zts-20121212/
	
	/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626/
	
2、配置php支持
	vi /usr/local/php/etc/php.ini  #编辑配置文件，在最后一行添加以下内容,且保存退出
	
	extension="redis.so"


3、重启服务
	/etc/init.d/nginx restart #重启nginx
	service php-fpm restart #启动php-fpm
	
	注：service php-fpm restart #启动php-fpm
	
	添加php环境变量
		vi /etc/profile
		
		export PATH=$PATH:/usr/local/php/bin
		
		source /etc/profile

		swoole
		cd swoole
/usr/local/php/bin/phpize
./configure
make 
make install

vi /usr/local/php/etc/php.ini
extension=swoole.so